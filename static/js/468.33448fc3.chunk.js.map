{"version":3,"file":"static/js/468.33448fc3.chunk.js","mappings":"yNAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,MAAnB,EAEpBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EAEvBC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAnB,EAEnBC,GAAyBC,EAAAA,EAAAA,IACpC,CAACX,EAAgBI,IACjB,SAACD,EAAOE,GACN,IAAMO,EAAmBP,EAAOQ,cAChC,OAAOV,EAAME,QAAO,SAAAS,GAAC,OAAIA,EAAEC,KAAKF,cAAcG,SAASJ,EAAlC,GACtB,I,uCCbUK,EAAYC,EAAAA,GAAAA,IAAH,kH,4BCMTC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOL,EAAP,KAAaM,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXvB,GAAWwB,EAAAA,EAAAA,IAAY1B,GAYvB2B,EAAY,WAChBN,EAAQ,IACRE,EAAU,GACX,EAED,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMK,SAjBe,SAACC,GAExB,GADAA,EAAEC,iBACE5B,EAAS6B,MAAK,SAAAjB,GAAC,OAAIA,EAAEC,OAASA,CAAf,IACjB,OAAOiB,MAAM,GAAD,OAAIjB,EAAJ,sCAGdS,GAASS,EAAAA,EAAAA,IAAc,CAAElB,KAAAA,EAAMO,OAAAA,KAC/BK,GACD,EASG,WACE,UAAC,KAAD,mBAEE,SAAC,KAAD,CACEO,KAAK,OACLC,MAAOpB,EACPqB,SAAU,SAACP,GAAD,OAAKR,EAAQQ,EAAEQ,cAAcF,MAA7B,EACVpB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAAC,KAAD,oBAEE,SAAC,KAAD,CACEN,KAAK,MACLC,MAAOb,EACPc,SAAU,SAACP,GAAD,OAAKN,EAAUM,EAAEQ,cAAcF,MAA/B,EACVpB,KAAK,SACLuB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAAC,KAAD,CAAQN,KAAK,SAAb,6BAMP,E,UC5DYO,EAAQvB,EAAAA,GAAAA,MAAH,yJCMLwB,EAAS,WAClB,IAAMlB,GAAWC,EAAAA,EAAAA,MAGjB,OACI,UAACgB,EAAD,oCACI,SAAC,KAAD,CAAOP,KAAK,OAAOnB,KAAK,SAASoB,OAAOT,EAAAA,EAAAA,IAAYtB,GAAegC,SAJpD,SAAAP,GAAC,OAAIL,GAASmB,EAAAA,EAAAA,GAAUd,EAAEQ,cAAcF,OAAvC,MAO3B,E,mBCfYS,EAAkB1B,EAAAA,GAAAA,IAAD,qNCEjB2B,EAAa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACxB,OACI,UAACF,EAAD,YACI,uBAAIE,KACJ,SAAC,MAAD,CAAeC,KAAM,OAGhC,ECTYC,EAAO9B,EAAAA,GAAAA,KAAH,iFAMHD,EAAYC,EAAAA,GAAAA,IAAH,+DCFV+B,EAAc,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAInC,EAAmB,EAAnBA,KAAMO,EAAa,EAAbA,OAC9BE,GAAWC,EAAAA,EAAAA,MAEjB,OACI,UAAC,EAAD,YACI,SAACuB,EAAD,UAAOjC,KACP,SAACiC,EAAD,UAAO1B,KACP,SAAC,KAAD,CAAQY,KAAK,SAASiB,QAAS,kBAAI3B,GAAS4B,EAAAA,EAAAA,IAAcF,GAA3B,EAA/B,sBAGX,ECdYG,EAAOnC,EAAAA,GAAAA,GAAH,mEAIJoC,EAAWpC,EAAAA,GAAAA,GAAH,oaCARqC,EAAc,WAEvB,OACI,SAACF,EAAD,WACK3B,EAAAA,EAAAA,IAAYhB,GAAwB8C,KAAI,gBAAGN,EAAH,EAAGA,GAAInC,EAAP,EAAOA,KAAMO,EAAb,EAAaA,OAAb,OACzC,SAACgC,EAAD,WACI,SAACL,EAAD,CAAaC,GAAIA,EAAInC,KAAMA,EAAMO,OAAQA,KAD9B4B,EAD0B,KAQpD,ECiBD,EAtBqB,WAEnB,IAAM1B,GAAWC,EAAAA,EAAAA,MACXlB,GAAYmB,EAAAA,EAAAA,IAAYpB,GACxBG,GAAQiB,EAAAA,EAAAA,IAAYlB,GAM1B,OAJAiD,EAAAA,EAAAA,YAAU,WACRjC,GAASkC,EAAAA,EAAAA,MACV,GAAE,CAAClC,KAGF,UAACP,EAAD,YACE,SAACE,EAAD,KACA,sCACA,SAACuB,EAAD,IACCnC,IAAa,SAACoD,EAAA,EAAD,IACblD,IAAS,SAACoC,EAAD,oCACV,SAACU,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","pages/ContactsPage/ContactsPage.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/BadRequest/BadRequest.styled.js","components/BadRequest/BadRequest.jsx","components/ContactCard/ContactCard.styled.js","components/ContactCard/ContactCard.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(c => c.name.toLowerCase().includes(normalizedFilter));\n  }\n);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  \n  \n  h2{\n    padding: 8px;\n    background-color:#ffffff;\n    color:#444444;\n  }\n`","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { addNewContact } from \"redux/contacts/operations\";\nimport { selectContacts } from \"redux/contacts/selectors\";\n\nimport { Container, Form, Label, Input, Button } from \"pages/RegisterPage/RegisterPage.styled\";\n\nexport const ContactForm = ()=> {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  \n  const handleAddContact = (e) => {\n    e.preventDefault();\n    if (contacts.find(c => c.name === name)) {\n      return alert(`${name} already exists in contacts list.`);\n    }\n\n    dispatch(addNewContact({ name, number }));\n    resetForm();\n  }\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  }\n  \n  return (\n    <Container>\n      <Form onSubmit={handleAddContact}>\n        <Label>\n          Name \n          <Input\n            type=\"text\"\n            value={name}\n            onChange={(e)=>setName(e.currentTarget.value)}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Phone\n          <Input\n            type=\"tel\"\n            value={number}\n            onChange={(e)=>setNumber(e.currentTarget.value)}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    </Container>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n    display: flex;\n    padding: 8px;\n    gap:8px;\n    height: 20px;\n    background-color: #FFFFFF;\n    align-items:center;\n`\n\n","\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { setFilter } from \"redux/contacts/slice\";\n\nimport { Label } from \"./Filter.styled\";\nimport { Input  } from \"pages/RegisterPage/RegisterPage.styled\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const onChangeFilter = e => dispatch(setFilter(e.currentTarget.value));\n    \n    return (\n        <Label>Find contacts by name\n            <Input type=\"text\" name=\"filter\" value={useSelector(selectFilter)} onChange={onChangeFilter} />\n        </Label>\n    )\n}\n\n","import styled from \"styled-components\";\n\nexport const BadRequestWrapper=styled.div`\n    margin-top: 16px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align:center;\n    font-size: 18px ;\n    font-weight: 700;\n    color: #444444;\n`","import PropTypes from 'prop-types'\nimport { TbFaceIdError } from 'react-icons/tb';\nimport { BadRequestWrapper } from \"./BadRequest.styled\";\n\nexport const BadRequest = ({children}) => {\n    return (\n        <BadRequestWrapper>\n            <p>{children}</p>\n            <TbFaceIdError size={64} />\n        </BadRequestWrapper>\n    )\n}\n\nBadRequest.propTypes = {\n    children: PropTypes.string,    \n}","import styled from \"styled-components\";\n\nexport const Text = styled.span`\ndisplay: block;\n    padding:  6px;\n    width: 200px;\n `\n\n export const Container = styled.div`\n display: flex;\n padding: 6px 12px;\n `","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { removeContact } from \"redux/contacts/operations\";\nimport { Text, Container } from \"./ContactCard.styled\";\nimport { Button } from \"pages/RegisterPage/RegisterPage.styled\";\n\nexport const ContactCard = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <Container>\n            <Text>{name}</Text>\n            <Text>{number}</Text>\n            <Button type=\"button\" onClick={()=>dispatch(removeContact(id))}>Delete</Button>\n        </Container>\n    )\n}\n\nContactCard.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    color:#444444;\n    font-size: large;\n`\nexport const ListItem = styled.li`\n    display: flex;\n    margin-top: 4px;\n    height: 40px;\n    align-items: center;\n    justify-content: space-between;\n    background-color: #ffffff;\n    border-bottom:1px solid #78787850;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1), \n        border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover,\n    :focus{\n        background-color: #f2f2f2;\n    }\n`","\nimport { ContactCard } from \"components/ContactCard/ContactCard\";\nimport { useSelector } from \"react-redux\";\nimport { selectFilteredContacts } from \"redux/contacts/selectors\";\nimport { List, ListItem } from \"./ContactList.styled\";\n\nexport const ContactList = () => {\n\n    return (\n        <List>\n            {useSelector(selectFilteredContacts).map(({ id, name, number })=>(\n            <ListItem key={id}>\n                <ContactCard id={id} name={name} number={number}/>\n            </ListItem>\n            ))}\n        </List>\n    )\n\n}\n\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectError, selectIsLoading } from \"redux/contacts/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { Container } from \"./ContactsPage.styled\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { BadRequest } from \"components/BadRequest/BadRequest\";\nimport { ContactList } from \"components/ContactList/ContactList\";\n\n\n\nconst ContactsPage = () => {\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <Loader />}\n      {error && <BadRequest>Something went wrong</BadRequest>}\n      <ContactList />\n    </Container>\n  )\n}\n\nexport default ContactsPage;\n\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","normalizedFilter","toLowerCase","c","name","includes","Container","styled","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","resetForm","onSubmit","e","preventDefault","find","alert","addNewContact","type","value","onChange","currentTarget","pattern","title","required","Label","Filter","setFilter","BadRequestWrapper","BadRequest","children","size","Text","ContactCard","id","onClick","removeContact","List","ListItem","ContactList","map","useEffect","fetchContacts","Loader"],"sourceRoot":""}